@page "/ChooseDatabase"
@inject IDatabaseManagementService _dbService;

<div class="row">
    <MapTool.Blazor.Shared.Databases.CreateDatabase OnCreate="RefreshPage" />
    <div class="col-lg-4 col-m-12 bg-light border border-info m-2 p-2">
        <h3>Choose an existing database</h3>
        <div class="row p-3">
            @foreach(var db in ExistingDatabase)
            {
                <MapTool.Blazor.Shared.Databases.DatabaseItem DatabasePath="@db.path" DatabaseName="@db.name" OnDatabaseDeleteCallback="OnDeleteDatabase"/>
            }
        </div>
    </div>
    <MapTool.Blazor.Shared.Databases.ImportDatabase OnImport="RefreshPage" />
</div>
@code {
    public (string name, string path)[] ExistingDatabase { get; set; }

    protected override Task OnInitializedAsync()
    {
        _dbService.DatabaseChanged += OnDatabaseChanged;
        ExistingDatabase = _dbService.ListDatabases();

        return base.OnInitializedAsync();
    }

    private void OnDeleteDatabase(Tuple<string, string> data)
    {
        ExistingDatabase = _dbService.ListDatabases();
        StateHasChanged();
    }

    private void OnDatabaseChanged(string name, string path)
    {
        ExistingDatabase = _dbService.ListDatabases();
        StateHasChanged();
    }

    private void RefreshPage(string data)
    {
        ExistingDatabase = _dbService.ListDatabases();
        StateHasChanged();
    }

}
